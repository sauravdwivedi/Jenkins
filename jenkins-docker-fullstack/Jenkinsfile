def forceBuild = true

pipeline {
    environment {
        registry = 'sauravdwivedi/jenkins-docker-fullstack'
        registryCredential = 'dockerhub_id'
        dockerImage = ''
        dockerComposeFile = 'jenkins-docker-fullstack/compose.yaml'
        containerLog = '***************************************************container-logs***************************************************'
    }
    agent any
    stages {
        stage('Build, tag and push backend container') {
            when {
                anyOf {
                    changeset 'jenkins-docker-fullstack/backend/**'
                    expression {forceBuild == true}
                }
            }
            steps {
                script {
                    dockerImage = docker.build("$registry/jenkins-backend:$BUILD_NUMBER", './jenkins-docker-fullstack/backend')
                }
                // script {
                //     docker.withRegistry('', registryCredential) {
                //         dockerImage.push()
                //     }
                // }
            }
        }
        stage('Build, tag and push frontend container') {
            when {
                anyOf {
                    changeset 'jenkins-docker-fullstack/frontend/**'
                    expression {forceBuild == true}
                }
            }
            steps {
                script {
                    dockerImage = docker.build("$registry/jenkins-frontend:$BUILD_NUMBER", './jenkins-docker-fullstack/frontend')
                }
                // script {
                //     docker.withRegistry('', registryCredential) {
                //         dockerImage.push()
                //     }
                // }
            }
        }
        stage('Create docker network') {
            steps {
                sh 'docker network create jenkins-docker-fullstack'
            }
        }
        stage('Deploy backend container') {
            when {
                anyOf {
                    changeset 'jenkins-docker-fullstack/backend/**'
                    expression {forceBuild == true}
                }
            }
            steps {
                sh 'docker stop jenkins-backend || true && docker rm jenkins-backend || true'
                sh "docker run --network jenkins-docker-fullstack --name jenkins-backend -d -p 5000:5000 $registry/jenkins-backend:$BUILD_NUMBER"
            }
            // steps {
            //     sh "docker compose -f ${dockerComposeFile} up -d backend"
            // }
        }
        stage('Deploy frontend container') {
            when {
                anyOf {
                    changeset 'jenkins-docker-fullstack/frontend/**'
                    expression {forceBuild == true}
                }
            }
            steps {
                sh 'docker stop jenkins-frontend || true && docker rm jenkins-frontend || true'
                sh "docker run --network jenkins-docker-fullstack --name jenkins-frontend -d -p 3000:3000 $registry/jenkins-frontend:$BUILD_NUMBER"
            }
            // steps {
            //     sh "docker compose -f ${dockerComposeFile} up -d frontend"
            // }
        }
        stage('Check backend container logs') {
            steps {
                sh(returnStdout: true, returnStatus: true, script: 'echo $containerLog')
                sh 'docker logs jenkins-backend'
            }
        }
        stage('Check frontend container logs') {
            steps {
                sh(returnStdout: true, returnStatus: true, script: 'echo $containerLog')
                sh 'docker logs jenkins-frontend'
            }
        }
    }
}