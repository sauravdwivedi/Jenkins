def loginToDockerRegistry() {
    sh "docker login -u $REGISTRY_CREDENTIAL_USR -p $REGISTRY_CREDENTIAL_PSW"
}

pipeline {
    environment {
        WORK_DIR = "$WORKSPACE/jenkins-docker-fullstack"
        REGISTRY = 'sauravdwivedi'
        REGISTRY_CREDENTIAL = credentials('dockerhub_id')
        IMAGE_NAME_BACKEND = 'jenkins-docker-fullstack-backend'
        IMAGE_NAME_FRONTEND = 'jenkins-docker-fullstack-frontend'
        DOCKER_COMPOSE_FILE = 'jenkins-docker-fullstack/compose.yaml'
        FORCE_BUILD = 'no'
        ASTERISKS = '**************************************************'
    }
    agent any
    stages {
        stage('Build, tag and push backend container') {
            when {
                anyOf {
                    changeset "$WORK_DIR/backend/**"
                    environment name: 'FORCE_BUILD', value: 'yes'
                }
            }
            steps {
                script {
                    loginToDockerRegistry()
                    dockerImageBackend = docker.build(
                        "$REGISTRY/$IMAGE_NAME_BACKEND:$BUILD_NUMBER", 
                        "$WORK_DIR/backend"
                    )
                    dockerImageBackend.push()
                    dockerImageBackend.push('latest')
                }
            }
        }
        stage('Build, tag and push frontend container') {
            when {
                anyOf {
                    changeset "$WORK_DIR/frontend/**"
                    environment name: 'FORCE_BUILD', value: 'yes'
                }
            }
            steps {
                script {
                    loginToDockerRegistry()
                    dockerImageFrontend = docker.build(
                        "$REGISTRY/$IMAGE_NAME_FRONTEND:$BUILD_NUMBER", 
                        "$WORK_DIR/frontend"
                    )
                    dockerImageFrontend.push()
                    dockerImageFrontend.push('latest')
                }
            }
        }
        stage('Deploy backend container') {
            when {
                anyOf {
                    changeset "$WORK_DIR/backend/**"
                    environment name: 'FORCE_BUILD', value: 'yes'
                }
            }
            steps {
                sh "docker compose -f $DOCKER_COMPOSE_FILE up -d backend"
            }
        }
        stage('Deploy frontend container') {
            when {
                anyOf {
                    changeset "$WORK_DIR/frontend/**"
                    environment name: 'FORCE_BUILD', value: 'yes'
                }
            }
            steps {
                sh "docker compose -f $DOCKER_COMPOSE_FILE up -d frontend"
            }
        }
        stage('Check backend container logs') {
            steps {
                sh(returnStdout: true, returnStatus: true, script: "echo $ASTERISKS-backend-logs-$ASTERISKS")
                sh 'docker logs jenkins-backend || true'
            }
        }
        stage('Check frontend container logs') {
            steps {
                sh(returnStdout: true, returnStatus: true, script: "echo $ASTERISKS-backend-logs-$ASTERISKS")
                sh 'docker logs jenkins-frontend || true'
            }
        }
    }
}